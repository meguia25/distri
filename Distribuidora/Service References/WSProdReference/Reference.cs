//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Distribuidora.WSProdReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSProdReference.IProductoService")]
    public interface IProductoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductoService/insertarImportado", ReplyAction="http://tempuri.org/IProductoService/insertarImportadoResponse")]
        bool insertarImportado(int codigo, string nombre, string descripcion, double costo, double precioSugerido, string paisOrigen, int cantMinima);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductoService/insertarImportado", ReplyAction="http://tempuri.org/IProductoService/insertarImportadoResponse")]
        System.Threading.Tasks.Task<bool> insertarImportadoAsync(int codigo, string nombre, string descripcion, double costo, double precioSugerido, string paisOrigen, int cantMinima);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductoService/insertarFabricado", ReplyAction="http://tempuri.org/IProductoService/insertarFabricadoResponse")]
        bool insertarFabricado(int codigo, string nombre, string descripcion, double costo, double precioSugerido, double tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductoService/insertarFabricado", ReplyAction="http://tempuri.org/IProductoService/insertarFabricadoResponse")]
        System.Threading.Tasks.Task<bool> insertarFabricadoAsync(int codigo, string nombre, string descripcion, double costo, double precioSugerido, double tiempo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductoService/actualizarEmpleado", ReplyAction="http://tempuri.org/IProductoService/actualizarEmpleadoResponse")]
        bool actualizarEmpleado(string email, int codigo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProductoService/actualizarEmpleado", ReplyAction="http://tempuri.org/IProductoService/actualizarEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> actualizarEmpleadoAsync(string email, int codigo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductoServiceChannel : Distribuidora.WSProdReference.IProductoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductoServiceClient : System.ServiceModel.ClientBase<Distribuidora.WSProdReference.IProductoService>, Distribuidora.WSProdReference.IProductoService {
        
        public ProductoServiceClient() {
        }
        
        public ProductoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool insertarImportado(int codigo, string nombre, string descripcion, double costo, double precioSugerido, string paisOrigen, int cantMinima) {
            return base.Channel.insertarImportado(codigo, nombre, descripcion, costo, precioSugerido, paisOrigen, cantMinima);
        }
        
        public System.Threading.Tasks.Task<bool> insertarImportadoAsync(int codigo, string nombre, string descripcion, double costo, double precioSugerido, string paisOrigen, int cantMinima) {
            return base.Channel.insertarImportadoAsync(codigo, nombre, descripcion, costo, precioSugerido, paisOrigen, cantMinima);
        }
        
        public bool insertarFabricado(int codigo, string nombre, string descripcion, double costo, double precioSugerido, double tiempo) {
            return base.Channel.insertarFabricado(codigo, nombre, descripcion, costo, precioSugerido, tiempo);
        }
        
        public System.Threading.Tasks.Task<bool> insertarFabricadoAsync(int codigo, string nombre, string descripcion, double costo, double precioSugerido, double tiempo) {
            return base.Channel.insertarFabricadoAsync(codigo, nombre, descripcion, costo, precioSugerido, tiempo);
        }
        
        public bool actualizarEmpleado(string email, int codigo) {
            return base.Channel.actualizarEmpleado(email, codigo);
        }
        
        public System.Threading.Tasks.Task<bool> actualizarEmpleadoAsync(string email, int codigo) {
            return base.Channel.actualizarEmpleadoAsync(email, codigo);
        }
    }
}
