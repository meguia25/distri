//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Distribuidora.WSReferenceEmpleado {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="WSReferenceEmpleado.IEmpleadoService")]
    public interface IEmpleadoService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/InsertarEmpleado", ReplyAction="http://tempuri.org/IEmpleadoService/InsertarEmpleadoResponse")]
        bool InsertarEmpleado(string nombre, string contrasenia, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmpleadoService/InsertarEmpleado", ReplyAction="http://tempuri.org/IEmpleadoService/InsertarEmpleadoResponse")]
        System.Threading.Tasks.Task<bool> InsertarEmpleadoAsync(string nombre, string contrasenia, string email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmpleadoServiceChannel : Distribuidora.WSReferenceEmpleado.IEmpleadoService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmpleadoServiceClient : System.ServiceModel.ClientBase<Distribuidora.WSReferenceEmpleado.IEmpleadoService>, Distribuidora.WSReferenceEmpleado.IEmpleadoService {
        
        public EmpleadoServiceClient() {
        }
        
        public EmpleadoServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmpleadoServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpleadoServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmpleadoServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertarEmpleado(string nombre, string contrasenia, string email) {
            return base.Channel.InsertarEmpleado(nombre, contrasenia, email);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarEmpleadoAsync(string nombre, string contrasenia, string email) {
            return base.Channel.InsertarEmpleadoAsync(nombre, contrasenia, email);
        }
    }
}
